/* tslint:disable */
/* eslint-disable */
/**
 * Chess2
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Variant } from './Variant';
import {
    VariantFromJSON,
    VariantFromJSONTyped,
    VariantToJSON,
} from './Variant';

/**
 * 
 * @export
 * @interface GameSettings
 */
export interface GameSettings {
    /**
     * 
     * @type {Variant}
     * @memberof GameSettings
     */
    variant: Variant;
    /**
     * 
     * @type {number}
     * @memberof GameSettings
     */
    timeControl: number;
    /**
     * 
     * @type {number}
     * @memberof GameSettings
     */
    increment: number;
}

/**
 * Check if a given object implements the GameSettings interface.
 */
export function instanceOfGameSettings(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "variant" in value;
    isInstance = isInstance && "timeControl" in value;
    isInstance = isInstance && "increment" in value;

    return isInstance;
}

export function GameSettingsFromJSON(json: any): GameSettings {
    return GameSettingsFromJSONTyped(json, false);
}

export function GameSettingsFromJSONTyped(json: any, ignoreDiscriminator: boolean): GameSettings {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'variant': VariantFromJSON(json['variant']),
        'timeControl': json['time_control'],
        'increment': json['increment'],
    };
}

export function GameSettingsToJSON(value?: GameSettings | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'variant': VariantToJSON(value.variant),
        'time_control': value.timeControl,
        'increment': value.increment,
    };
}

